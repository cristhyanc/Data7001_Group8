source('D:/Technical document/Master of data science/Sem 2 2020/Stats model for DS DATA7202/Assignment 1/Assignment 1/scripts/Assignment 1.R')
source('D:/Technical document/Master of data science/Sem 2 2020/Stats model for DS DATA7202/Assignment 1/Assignment 1/scripts/Assignment 1.R')
df <- read.csv("data/OnlineNewsPopularity.csv", header = TRUE)
source('D:/Technical document/Master of data science/Sem 2 2020/Stats model for DS DATA7202/Assignment 1/Assignment 1/scripts/Assignment 1.R')
source('D:/Technical document/Master of data science/Sem 2 2020/Stats model for DS DATA7202/Assignment 1/Assignment 1/scripts/Assignment 1.R')
u <- runif(10000, 0, 1)
X <- exp(u)-1
hist(X)
hist(X, freq = False)
hist(X, freq = F)
X <- ceiling(exp(u)-1)
hist(X, freq = F)
X <- floor(exp(u)-1)
hist(X, freq = F)
hist(X, freq = F)
hist(X, freq = T)
X <- celing(exp(u)-1)
hist(X, freq = T)
X <- ceiling(exp(u)-1)
hist(X, freq = T)
hist(X, freq = F)
summary(X)
setwd("~/GitHub/Data7001_Group8/ModelDevelopment")
library(Hmisc)
library(tidyverse)
library(dplyr)
library(car)
library(gvlma)
# Census data
census <- read.csv("Census_3_Corrected SED.csv", header = TRUE)
census <- census[,-1]
# Project cost data
project <- read.csv('projectscsv.csv', header = T)
projectSum <- project %>%
group_by(Electorate) %>%
summarise(TotalEstimatedCost=sum(TotalEstimatedCost))
projectSum <- projectSum[-78,]
projectSum$Electorate <- toupper(projectSum$Electorate)
# Election result data
party <- read.csv("election_results_two_preferred.csv", header = F)
party <- party[party[1]==2017,]
party <- party[party[3]!="Total" & party[3]!='Exhausted',]
partydf <- party %>%
group_by(V2) %>%
mutate(Voteperc=V4/sum(V4))
colnames(partydf) <- c('Year', 'Electorate', 'Party', 'Votes', 'VotePerc')
# Identify if ALP won the electorate
partydf <- partydf %>%
group_by(Electorate) %>%
mutate(Margin=VotePerc-min(VotePerc)) %>%
mutate(isALP = ifelse(Margin>0 & Party=='ALP',1,0))
partydf_isALP <- partydf %>%
filter(isALP==1) %>%
mutate(Safety = ifelse(Margin>0.1, 0,
ifelse((Margin>0.06 & Margin<=0.1), 1, 2))) %>%
mutate(ALP_Safety_Ranking = Safety)
partydf_notALP <- partydf%>%
filter(isALP==0) %>%
group_by(Electorate) %>%
mutate(Safety = ifelse(Party=='ALP', 0,
ifelse(Margin>0.1, 5,
ifelse(Margin<=0.1 & Margin >0.06, 4,
ifelse(Margin == 0, 1,
ifelse(Margin<=0.06, 3, NA))))))
partydf_notALP <- partydf_notALP %>%
group_by(Electorate) %>%
mutate(ALP_Safety_Ranking = ifelse(sum(Safety)>5, 5,
ifelse(sum(Safety)==1, 0, sum(Safety))))
partydf_notALP <- partydf_notALP %>%
filter(Margin!=0)
# Election data with isALP and ALP_Safety_Ranking
newpartydf <- rbind(partydf_isALP, partydf_notALP)
newpartydf <- newpartydf[,-c(1,3,4,5,8)]
newpartydf$Electorate <- toupper(newpartydf$Electorate)
combined <- merge(merge(census, newpartydf, all = F), projectSum, all=F)
write.csv(combined, 'combined3.csv')
data <- combined
data$logCost <- log(data$TotalEstimatedCost)
attach(data)
# Linear with logarithmic transformation of Y
model2 <- lm(logCost~Working_Age+Retired+log(Median_tot_fam_inc_weekly)+Full_time_Employ+isALP+ALP_Safety_Ranking+Margin)
summary(model2)
xyplot(logCost~Working_Age) # Potential
# Linear with logarithmic transformation of Y
model2 <- lm(logCost~Working_Age+Under_Age+log(Median_tot_fam_inc_weekly)+Full_time_Employ+isALP+ALP_Safety_Ranking+Margin)
summary(model2)
